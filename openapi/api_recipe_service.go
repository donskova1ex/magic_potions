// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Swagger Potion maker - OpenAPI 3.0
 *
 * Сервис изготовления зелий
 *
 * API version: 1.0.0
 */

package openapi

import (
	"context"
	"errors"
	"net/http"
)

// RecipeAPIService is a service that implements the logic for the RecipeAPIServicer
// This service should implement the business logic for every endpoint for the RecipeAPI API.
// Include any external packages or services that will be required by this service.
type RecipeAPIService struct {
}

// NewRecipeAPIService creates a default api service
func NewRecipeAPIService() *RecipeAPIService {
	return &RecipeAPIService{}
}

// RecipesList - recipes list
func (s *RecipeAPIService) RecipesList(ctx context.Context) (ImplResponse, error) {
	// TODO - update RecipesList with the required logic for this service method.
	// Add api_recipe_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Recipe{}) or use other options such as http.Ok ...
	// return Response(200, []Recipe{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("RecipesList method not implemented")
}

// GetRecipeByUUID - Find recipe by UUID
func (s *RecipeAPIService) GetRecipeByUUID(ctx context.Context, uuid string) (ImplResponse, error) {
	// TODO - update GetRecipeByUUID with the required logic for this service method.
	// Add api_recipe_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Recipe{}) or use other options such as http.Ok ...
	// return Response(200, Recipe{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetRecipeByUUID method not implemented")
}

// UpdateRecipeByUUID - Update a recipe by uuid
func (s *RecipeAPIService) UpdateRecipeByUUID(ctx context.Context, uuid string, recipe Recipe) (ImplResponse, error) {
	// TODO - update UpdateRecipeByUUID with the required logic for this service method.
	// Add api_recipe_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Recipe{}) or use other options such as http.Ok ...
	// return Response(200, Recipe{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(422, {}) or use other options such as http.Ok ...
	// return Response(422, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateRecipeByUUID method not implemented")
}

// DeleteRecipeByUUID - Delete recipe
func (s *RecipeAPIService) DeleteRecipeByUUID(ctx context.Context, uuid string) (ImplResponse, error) {
	// TODO - update DeleteRecipeByUUID with the required logic for this service method.
	// Add api_recipe_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteRecipeByUUID method not implemented")
}
