// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Swagger Potion maker - OpenAPI 3.0
 *
 * Сервис изготовления зелий
 *
 * API version: 1.0.0
 */

package openapi

import (
	"context"
	"errors"
	"net/http"
)

// IngredientAPIService is a service that implements the logic for the IngredientAPIServicer
// This service should implement the business logic for every endpoint for the IngredientAPI API.
// Include any external packages or services that will be required by this service.
type IngredientAPIService struct {
}

// NewIngredientAPIService creates a default api service
func NewIngredientAPIService() *IngredientAPIService {
	return &IngredientAPIService{}
}

// IngredientsList - Ingredients list
func (s *IngredientAPIService) IngredientsList(ctx context.Context) (ImplResponse, error) {
	// TODO - update IngredientsList with the required logic for this service method.
	// Add api_ingredient_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Ingredient{}) or use other options such as http.Ok ...
	// return Response(200, []Ingredient{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("IngredientsList method not implemented")
}

// GetIngredientByUUID - Find ingredient by UUID
func (s *IngredientAPIService) GetIngredientByUUID(ctx context.Context, uuid string) (ImplResponse, error) {
	// TODO - update GetIngredientByUUID with the required logic for this service method.
	// Add api_ingredient_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Ingredient{}) or use other options such as http.Ok ...
	// return Response(200, Ingredient{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetIngredientByUUID method not implemented")
}

// UpdateIngredientByUUID - Update a ingredient by uuid
func (s *IngredientAPIService) UpdateIngredientByUUID(ctx context.Context, uuid string, ingredient Ingredient) (ImplResponse, error) {
	// TODO - update UpdateIngredientByUUID with the required logic for this service method.
	// Add api_ingredient_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Ingredient{}) or use other options such as http.Ok ...
	// return Response(200, Ingredient{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(422, {}) or use other options such as http.Ok ...
	// return Response(422, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateIngredientByUUID method not implemented")
}

// DeleteIngredientByUUID - Delete ingredient
func (s *IngredientAPIService) DeleteIngredientByUUID(ctx context.Context, uuid string) (ImplResponse, error) {
	// TODO - update DeleteIngredientByUUID with the required logic for this service method.
	// Add api_ingredient_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteIngredientByUUID method not implemented")
}
