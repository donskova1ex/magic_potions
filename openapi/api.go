// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Swagger Potion maker - OpenAPI 3.0
 *
 * Сервис изготовления зелий
 *
 * API version: 1.0.0
 */

package openapi

import (
	"context"
	"net/http"
)

// IngredientAPIRouter defines the required methods for binding the api requests to a responses for the IngredientAPI
// The IngredientAPIRouter implementation should parse necessary information from the http request,
// pass the data to a IngredientAPIServicer to perform the required actions, then write the service results to the http response.
type IngredientAPIRouter interface {
	IngredientsList(http.ResponseWriter, *http.Request)
	GetIngredientByUUID(http.ResponseWriter, *http.Request)
	UpdateIngredientByUUID(http.ResponseWriter, *http.Request)
	DeleteIngredientByUUID(http.ResponseWriter, *http.Request)
}

// RecipeAPIRouter defines the required methods for binding the api requests to a responses for the RecipeAPI
// The RecipeAPIRouter implementation should parse necessary information from the http request,
// pass the data to a RecipeAPIServicer to perform the required actions, then write the service results to the http response.
type RecipeAPIRouter interface {
	RecipesList(http.ResponseWriter, *http.Request)
	GetRecipeByUUID(http.ResponseWriter, *http.Request)
	UpdateRecipeByUUID(http.ResponseWriter, *http.Request)
	DeleteRecipeByUUID(http.ResponseWriter, *http.Request)
}

// WitchAPIRouter defines the required methods for binding the api requests to a responses for the WitchAPI
// The WitchAPIRouter implementation should parse necessary information from the http request,
// pass the data to a WitchAPIServicer to perform the required actions, then write the service results to the http response.
type WitchAPIRouter interface {
	WitchesList(http.ResponseWriter, *http.Request)
	GetWitchByUUID(http.ResponseWriter, *http.Request)
	UpdateWitchByUUID(http.ResponseWriter, *http.Request)
	DeleteWitchByUUID(http.ResponseWriter, *http.Request)
}

// IngredientAPIServicer defines the api actions for the IngredientAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type IngredientAPIServicer interface {
	IngredientsList(context.Context) (ImplResponse, error)
	GetIngredientByUUID(context.Context, string) (ImplResponse, error)
	UpdateIngredientByUUID(context.Context, string, Ingredient) (ImplResponse, error)
	DeleteIngredientByUUID(context.Context, string) (ImplResponse, error)
}

// RecipeAPIServicer defines the api actions for the RecipeAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RecipeAPIServicer interface {
	RecipesList(context.Context) (ImplResponse, error)
	GetRecipeByUUID(context.Context, string) (ImplResponse, error)
	UpdateRecipeByUUID(context.Context, string, Recipe) (ImplResponse, error)
	DeleteRecipeByUUID(context.Context, string) (ImplResponse, error)
}

// WitchAPIServicer defines the api actions for the WitchAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type WitchAPIServicer interface {
	WitchesList(context.Context) (ImplResponse, error)
	GetWitchByUUID(context.Context, string) (ImplResponse, error)
	UpdateWitchByUUID(context.Context, string) (ImplResponse, error)
	DeleteWitchByUUID(context.Context, string) (ImplResponse, error)
}
