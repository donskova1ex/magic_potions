// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/donskova1ex/magic_potions/internal/processors (interfaces: WitchesLogger)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// WitchesLogger is a mock of WitchesLogger interface.
type WitchesLogger struct {
	ctrl     *gomock.Controller
	recorder *WitchesLoggerMockRecorder
}

// WitchesLoggerMockRecorder is the mock recorder for WitchesLogger.
type WitchesLoggerMockRecorder struct {
	mock *WitchesLogger
}

// NewWitchesLogger creates a new mock instance.
func NewWitchesLogger(ctrl *gomock.Controller) *WitchesLogger {
	mock := &WitchesLogger{ctrl: ctrl}
	mock.recorder = &WitchesLoggerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *WitchesLogger) EXPECT() *WitchesLoggerMockRecorder {
	return m.recorder
}

// Error mocks base method.
func (m *WitchesLogger) Error(arg0 string, arg1 ...interface{}) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "Error", varargs...)
}

// Error indicates an expected call of Error.
func (mr *WitchesLoggerMockRecorder) Error(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Error", reflect.TypeOf((*WitchesLogger)(nil).Error), varargs...)
}

// Info mocks base method.
func (m *WitchesLogger) Info(arg0 string, arg1 ...interface{}) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "Info", varargs...)
}

// Info indicates an expected call of Info.
func (mr *WitchesLoggerMockRecorder) Info(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Info", reflect.TypeOf((*WitchesLogger)(nil).Info), varargs...)
}
