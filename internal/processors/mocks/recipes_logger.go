// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/donskova1ex/magic_potions/internal/processors (interfaces: RecipesLogger)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// RecipesLogger is a mock of RecipesLogger interface.
type RecipesLogger struct {
	ctrl     *gomock.Controller
	recorder *RecipesLoggerMockRecorder
}

// RecipesLoggerMockRecorder is the mock recorder for RecipesLogger.
type RecipesLoggerMockRecorder struct {
	mock *RecipesLogger
}

// NewRecipesLogger creates a new mock instance.
func NewRecipesLogger(ctrl *gomock.Controller) *RecipesLogger {
	mock := &RecipesLogger{ctrl: ctrl}
	mock.recorder = &RecipesLoggerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *RecipesLogger) EXPECT() *RecipesLoggerMockRecorder {
	return m.recorder
}

// Error mocks base method.
func (m *RecipesLogger) Error(arg0 string, arg1 ...interface{}) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "Error", varargs...)
}

// Error indicates an expected call of Error.
func (mr *RecipesLoggerMockRecorder) Error(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Error", reflect.TypeOf((*RecipesLogger)(nil).Error), varargs...)
}

// Info mocks base method.
func (m *RecipesLogger) Info(arg0 string, arg1 ...interface{}) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "Info", varargs...)
}

// Info indicates an expected call of Info.
func (mr *RecipesLoggerMockRecorder) Info(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Info", reflect.TypeOf((*RecipesLogger)(nil).Info), varargs...)
}
